# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See LICENSE in the project root for license information.

# [TEMPLATE] Compile C# library Microsoft.MixedReality.WebRTC.dll and run tests

parameters: 
  buildAgent: ''
  # Build platform is irrelevant
  # Build arch is always AnyCPU
  buildConfig: ''      # Debug|Release
  testConfig: ''       # Debug|Release
 
jobs:

# Compile Microsoft.MixedReality.WebRTC.Native.dll
- job: cs_${{parameters.buildConfig}}_test_${{parameters.testConfig}}
  timeoutInMinutes: 60
  pool:
    name: ${{parameters.buildAgent}}
    demands: vstest
  variables:
  - group: MixedReality-WebRTC-ArtifactConfig
  steps:
  - checkout: self

  # Download the native libraries for testing
  - task: DownloadPipelineArtifact@2
    displayName: 'Download native library (UWP-x64-Release)'
    inputs:
      source: specific
      project: '5610c425-4799-474c-b133-d95d78fb63b1' # MixedReality-WebRTC-CI
      pipeline: 24 # mr-webrtc-cpp-ci
      runVersion: 'latest'
      artifact: 'Microsoft.MixedReality.WebRTC.Native_UWP-x64-Release'
      patterns: '**/*.@(pdb|dll)'
      path: 'bin/UWP/x64/Release'

  # Build Microsoft.MixedReality.WebRTC (Debug, incremental build)
  - task: DotNetCoreCLI@2
    displayName: 'Build C# WebRTC lib (AnyCPU-Debug) [incremental]'
    inputs:
      projects: libs/Microsoft.MixedReality.WebRTC/Microsoft.MixedReality.WebRTC.csproj
      arguments: '-f netstandard2.0 -c Debug'
      workingDirectory: libs/Microsoft.MixedReality.WebRTC/

  # Build Microsoft.MixedReality.WebRTC (Release, full build)
  - task: DotNetCoreCLI@2
    condition: succeededOrFailed() # Build even previous task failed
    displayName: 'Build C# WebRTC lib (AnyCPU-Release) [full build]'
    inputs:
      projects: libs/Microsoft.MixedReality.WebRTC/Microsoft.MixedReality.WebRTC.csproj
      arguments: '-f netstandard2.0 --no-incremental -c Release'
      workingDirectory: libs/Microsoft.MixedReality.WebRTC/

  # Build TestAppUWP (Release)
  - task: MSBuild@1
    condition: succeededOrFailed() # Build even previous task failed
    displayName: 'Build C# sample TestAppUWP (AnyCPU-Release)'
    inputs:
      msbuildVersion: latest
      msbuildArchitecture: x64
      solution: examples/TestAppUwp/Microsoft.MixedReality.WebRTC.TestAppUWP.csproj
      platform: x64
      configuration: Release
      msbuildArguments: -restore

  # Build C# tests
  - task: DotNetCoreCLI@2
    displayName: 'Build C# Tests (AnyCPU-${{parameters.testConfig}}) [incremental]'
    inputs:
      projects: tests/Microsoft.MixedReality.WebRTC.Tests/Microsoft.MixedReality.WebRTC.Tests.csproj
      arguments: '-c ${{parameters.testConfig}}'
      workingDirectory: tests/Microsoft.MixedReality.WebRTC.Tests/

  # Download Microsoft.MixedReality.WebRTC.Native.dll (Win32-x64-Release)
  - task: DownloadPipelineArtifact@1
    displayName: 'Download C++ WebRTC lib (Win32-x64-Release)'
    inputs:
      buildType: specific
      project: $(ArtifactConfig.Project)
      definition: $(ArtifactConfig.CppDefinitionId)
      artifactName: 'Microsoft.MixedReality.WebRTC.Native_Win32-x64-Release'
      targetPath: '$(Build.SourcesDirectory)/bin/Win32/x64/Release'
    enabled: false

  # Run tests (Win32-x64-Release)
  - task: VSTest@2
    displayName: 'C# Testing (C++ Win32-x64-Release / C# ${{parameters.testConfig}})'
    inputs:
      testAssemblyVer2: Microsoft.MixedReality.WebRTC.Tests.dll
      searchFolder: bin/netstandard2.0/${{parameters.testConfig}}/
      runOnlyImpactedTests: false

