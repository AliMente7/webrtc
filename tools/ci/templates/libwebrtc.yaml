# [TEMPLATE] Compile WebRTC

parameters: 
  buildPlatform: ''    # Win32|UWP
  buildArch: ''        # x86|x64|ARM|ARM64
  buildConfig: ''      # Debug|Release
 
jobs:

# Compile webrtc.lib (core Google implementation)
- job: libwebrtc_${{parameters.buildPlatform}}_${{parameters.buildArch}}_${{parameters.buildConfig}}
  timeoutInMinutes: 360
  pool:
    vmImage: 'vs2017-win2016' # Hosted VS2017
    demands: msbuild
  variables:
    buildTriple: ${{parameters.buildPlatform}}-${{parameters.buildArch}}-${{parameters.buildConfig}}
    projectRoot: 'external/webrtc-uwp-sdk/webrtc/windows/projects/msvc/'
  steps:
  - checkout: self
    submodules: recursive

  # Map build* variables to script* variables
  #   build* variables are for MSVC and use uppercase : ARM(64), Debug|Release, Win32|UWP
  #   script* variables are for the Google Python scripts and use lowercase: arm(64), debug|release, win|winuwp
  # See https://github.com/webrtc-uwp/webrtc-scripts/blob/3f2eb87b1baa3f49c6341d144e0b3c3be11c78ae/defaults.py#L17
  - powershell: |
     if ($env:BUILDPLATFORM -eq "Win32") {
       Write-Host "##vso[task.setvariable variable=scriptPlatform;]win"
     } else {
       Write-Host "##vso[task.setvariable variable=scriptPlatform;]winuwp"
     }
     if ($env:BUILDARCH -eq "ARM") {
       Write-Host "##vso[task.setvariable variable=scriptArch;]arm"
     } elseif ($env:BUILDARCH -eq "ARM64") {
       Write-Host "##vso[task.setvariable variable=scriptArch;]arm64"
     } else {
       Write-Host "##vso[task.setvariable variable=scriptArch;]$env:BUILDARCH"
     }
     if ($env:BUILDCONFIG -eq "Debug") {
       Write-Host "##vso[task.setvariable variable=scriptConfig;]debug"
     } else {
       Write-Host "##vso[task.setvariable variable=scriptConfig;]release"
     }

  # Ensure that Python 2.7.16 is the default; the Google scripts don't work with Python 3.x
  - task: UsePythonVersion@0
    displayName: 'Use Python 2.7.16 x64 for Google GN'
    inputs:
      versionSpec: 2.7.16
    timeoutInMinutes: 5

  # Compile webrtc.lib
  - task: MSBuild@1
    displayName: 'Build webrtc.lib ($(buildTriple))'
    inputs:
      solution: '$(projectRoot)WebRtc.${{parameters.buildPlatform}}.Native.Builder/WebRtc.${{parameters.buildPlatform}}.Native.Builder.vcxproj'
      msbuildVersion: '15.0'
      msbuildArchitecture: x64
      platform: ${{parameters.buildArch}}
      configuration: ${{parameters.buildConfig}}
    timeoutInMinutes: 120

  # Publish webrtc.lib alone
  - task: PublishPipelineArtifact@0
    displayName: 'Publish webrtc.lib ($(buildTriple))'
    inputs:
      artifactName: 'libwebrtc_$(buildTriple)'
      targetPath: 'external/webrtc-uwp-sdk/webrtc/xplatform/webrtc/OUTPUT/webrtc/$(scriptPlatform)/${{parameters.buildArch}}/${{parameters.buildConfig}}/webrtc.lib'
    timeoutInMinutes: 15

# Compile the UWP wrappers from the WebRTC UWP project
# - Org.WebRtc.WrapperGlue.lib
# - Org.WebRtc.dll
- job: orgwebrtc_${{parameters.buildPlatform}}_${{parameters.buildArch}}_${{parameters.buildConfig}}
  dependsOn: libwebrtc_${{parameters.buildPlatform}}_${{parameters.buildArch}}_${{parameters.buildConfig}}
  condition: |
    and(
      succeeded(),
      eq('${{parameters.buildPlatform}}', 'UWP')
    )
  timeoutInMinutes: 360
  pool:
    vmImage: 'vs2017-win2016' # Hosted VS2017
    demands: msbuild
  variables:
    buildTriple: ${{parameters.buildPlatform}}-${{parameters.buildArch}}-${{parameters.buildConfig}}
    projectRoot: 'external/webrtc-uwp-sdk/webrtc/windows/projects/msvc/'
  steps:
  - checkout: self
    submodules: recursive

  # Map build* variables to script* variables
  #   build* variables are for MSVC and use uppercase : ARM(64), Debug|Release, Win32|UWP
  #   script* variables are for the Google Python scripts and use lowercase: arm(64), debug|release, win|winuwp
  # See https://github.com/webrtc-uwp/webrtc-scripts/blob/3f2eb87b1baa3f49c6341d144e0b3c3be11c78ae/defaults.py#L17
  - powershell: |
     if ($env:BUILDPLATFORM -eq "Win32") {
       Write-Host "##vso[task.setvariable variable=scriptPlatform;]win"
     } else {
       Write-Host "##vso[task.setvariable variable=scriptPlatform;]winuwp"
     }
     if ($env:BUILDARCH -eq "ARM") {
       Write-Host "##vso[task.setvariable variable=scriptArch;]arm"
     } elseif ($env:BUILDARCH -eq "ARM64") {
       Write-Host "##vso[task.setvariable variable=scriptArch;]arm64"
     } else {
       Write-Host "##vso[task.setvariable variable=scriptArch;]$env:BUILDARCH"
     }
     if ($env:BUILDCONFIG -eq "Debug") {
       Write-Host "##vso[task.setvariable variable=scriptConfig;]debug"
     } else {
       Write-Host "##vso[task.setvariable variable=scriptConfig;]release"
     }

  # Ensure that Python 2.7.16 is the default; the Google scripts don't work with Python 3.x
  - task: UsePythonVersion@0
    displayName: 'Use Python 2.7.16 x64 for Google GN'
    inputs:
      versionSpec: 2.7.16
    timeoutInMinutes: 5

  # Prepare the environment with the setup script from Google
  - task: PythonScript@0
    displayName: 'Prepare WebRTC env ($(scriptArch)-$(scriptConfig))'
    inputs:
      scriptSource: 'filePath'
      scriptPath: 'external/webrtc-uwp-sdk/scripts/run.py'
      arguments: '-a prepare -p $(scriptPlatform) --cpus $(scriptArch) -c $(scriptConfig)'
    timeoutInMinutes: 5

  # Download webrtc.lib built by another agent via the previous job
  - task: DownloadPipelineArtifact@1
    displayName: 'Download webrtc.lib ($(buildTriple))'
    inputs:
      buildType: specific
      project: '8115054f-1c74-4928-a9ab-de4769e7d6ae'
      pipeline: 40773
      artifactName: 'libwebrtc_$(buildTriple)'
      # Download back exactly where it would have been otherwise compiled inside the source folder
      targetPath: '$(Build.SourcesDirectory)/external/webrtc-uwp-sdk/webrtc/xplatform/webrtc/OUTPUT/webrtc/$(scriptPlatform)/$(scriptArch)/$(scriptConfig)'
    timeoutInMinutes: 10

  # Restore any NuGet package (C++/WinRT, ...)
  - task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2  # NuGetCommand@2
    displayName: 'Restore NuGet packages for Org.WebRtc'
    inputs:
      command: restore
      restoreSolution: '$(wrapperProjectRoot)Org.WebRtc.Universal/packages.config'
      restoreDirectory: ../../../solutions/packages
    timeoutInMinutes: 10

  # Do the actual build
  - task: MSBuild@1
    displayName: 'Build Org.WebRTC WinRT wrappers ($(buildTriple))'
    inputs:
      solution: '$(wrapperProjectRoot)Org.WebRtc.Universal/Org.WebRtc.vcxproj'
      msbuildVersion: '15.0'
      msbuildArchitecture: x64
      platform: ${{parameters.buildArch}}
      configuration: ${{parameters.buildConfig}}
    timeoutInMinutes: 180

  # Publish Org.WebRtc.dll and associated (PDB, ...)
  - task: PublishPipelineArtifact@0
    displayName: 'Publish WinRT wrappers ($(buildTriple))'
    inputs:
      artifactName: 'orgwebrtc_$(buildTriple)'
      targetPath: '$(wrapperProjectRoot)Org.WebRtc.Universal/Build/Output/Org.WebRtc/${{parameters.buildConfig}}/${{parameters.buildArch}}'
    timeoutInMinutes: 15

  # Publish Org.WebRtc.WrapperGlue.lib and associated (PDB, ...)
  - task: PublishPipelineArtifact@0
    displayName: 'Publish WinRT glue wrappers ($(buildTriple))'
    inputs:
      artifactName: 'orgwebrtc_glue_$(buildTriple)'
      targetPath: '$(wrapperProjectRoot)Org.WebRtc.WrapperGlue.Universal/Build/Output/Org.WebRtc.WrapperGlue/${{parameters.buildConfig}}/${{parameters.buildArch}}'
    timeoutInMinutes: 15
